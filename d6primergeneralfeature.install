<?php
/**
 * 
 * Works with the D6Primer Installation Profile
 * to enable/disable modules for the associated platform
 * 
 */


// run when updating this module to version 6.x-1.8
function d6primergeneralfeature_update_6108() {

	// array of modules that should be disabled by default (that were enabled by default since last release)
	// careful, as this will disable even the modules that have been manually enabled since deployment using the platform
	if (module_exists('backup_migrate')) {
	  	// Disable content_access
	  	module_disable(array('backup_migrate'));
	  	// Uninstall content_access
	  	
	}
	
	// forcibly configure variables that have changed since last release of the install profile
	// careful, as this will disable even the modules that have been manually enabled since deployment using the platform
	
	// Configures cache new settings
	  variable_set('block_cache', '1');
	  variable_set('cache', '1');
  
  return array();

}

function d6primergeneralfeature_update_6109() {

	// array of modules that should be disabled by default (that were enabled by default since last release)
	// careful, as this will disable even the modules that have been manually enabled since deployment using the platform
	if (module_exists('backup_migrate')) {
	  	// Disable content_access
	  	module_disable(array('backup_migrate'));
	  	// Uninstall content_access
	  	
	}
	
	// forcibly configure variables that have changed since last release of the install profile
	// careful, as this will disable even the modules that have been manually enabled since deployment using the platform
	
	// Configures cache new settings
	  variable_set('block_cache', '1');
	  variable_set('cache', '1');
  
  return array();

}

function d6primergeneralfeature_update_6110() { 

  // check and change permissions on the cache directory for gcal_events
  if (module_exists('gcal_events')) {
	  $cacheParent = file_directory_path() . '/gcal_events';
	  $cachePath = $cacheParent . '/cache';
		
		// module stores cache in files directory (since dev version)

	  // create cache directory in files directory, make writable by server
		if(!is_dir($cacheParent)) {
	    mkdir($cacheParent, 0755, false);	
	  }
	  if(!is_dir($cachePath)) {
	    mkdir($cachePath, 0755, false); 
	  }

	  // check file permissions, if not 0755 then set
	  if(substr(sprintf('%o', fileperms($cachePath)), -4) != 0755) {
	    chmod($cachePath, 0755);
	  }
	}

}